name: build

on:
  push:
    branches:
      - '**'
    paths-ignore:
      - 'gradle.properties'
      - 'LICENSE'
      - 'README.adoc'
      - 'docs/**'
    tags-ignore:
      - 'v*'
  workflow_dispatch:

jobs:

  version:
    name: check version
    runs-on: ubuntu-latest
    outputs:
      BUILD_VERSION: ${{ env.BUILD_VERSION }}

    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: extract version
        run: |
          version=`head -n1 gradle.properties`
          echo "BUILD_VERSION=${version#projectVersion=}" >> $GITHUB_ENV
          cat $GITHUB_ENV

      - name: actor
        run: echo ${{ github.actor }} ${{ github.actor == 'hauner' }}

  test:
    name: test

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]

# , windows-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        submodules: true

#    - name: cache
#      uses: actions/cache@v3
#      with:
#        path: |
#          ~/.gradle/caches
#          ~/.gradle/wrapper
#        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#        restore-keys: |
#          ${{ runner.os }}-gradle-

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: |
          17
          11

    - name: setup gradle
      uses: gradle/gradle-build-action@v2.7.1

    - name: gradle check
      run: |
        ./gradlew javaToolchains check --warning-mode all --stacktrace
#        ./gradlew --stop

    - name: upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: build-${{ runner.os }}
        path: '*/build/libs'
        retention-days: 3

#    - name: archive test results
#      uses: actions/upload-artifact@v3
#      if: always()
#      with:
#        name: test results
#        path: '*/build/reports'

  publish:
    if: contains(needs.version.outputs.BUILD_VERSION, 'SNAPSHOT') && github.actor == 'hauner'
    needs: [version, test]
    name: publish snapshot

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3

#    - name: cache
#      uses: actions/cache@v3
#      with:
#        path: |
#          ~/.gradle/caches
#          ~/.gradle/wrapper
#        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#        restore-keys: |
#          ${{ runner.os }}-gradle-

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: |
          17
          11

    - name: setup gradle
      uses: gradle/gradle-build-action@v2.7.1

    - name: download artifacts
      uses: actions/download-artifact@v3
      with:
        name: build-${{ runner.os }}

    - name: publish snapshot
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SIGN_KEY: ${{ secrets.SIGN_KEY }}
        SIGN_PWD: ${{ secrets.SIGN_PWD }}
        PUBLISH_USER: ${{ secrets.PUBLISH_USER }}
        PUBLISH_KEY: ${{ secrets.PUBLISH_KEY }}
      run: |
        ./gradlew publishToSonatype --stacktrace
#        ./gradlew --stop

#    - name: archive test results
#      uses: actions/upload-artifact@v3
#      if: always()
#      with:
#        name: publish results
#        path: '*/build'

  sonarqube:
    needs: [publish]
    name: sonarqube

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

#    - name: cache
#      uses: actions/cache@v3
#      with:
#        path: |
#          ~/.gradle/caches
#          ~/.gradle/wrapper
#        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#        restore-keys: |
#          ${{ runner.os }}-gradle-

    - name: cache sonar
      uses: actions/cache@v3
      with:
        path: |
          ~/.sonar/cache
        key: sonar-${{ runner.os }}
        restore-keys: |
          sonar-${{ runner.os }}

    - name: set up jdk
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: |
          17
          11

    - name: setup gradle
      uses: gradle/gradle-build-action@v2.7.1
#
#    - name: download build
#      uses: actions/download-artifact@v3
#      with:
#        name: build-${{ runner.os }}

    - name: sonar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        ./gradlew -Dorg.gradle.java.home=${{env.JAVA_HOME_17_X64}} sonar --stacktrace

    - name: sonar results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: sonar results
        path:  '*/build'
