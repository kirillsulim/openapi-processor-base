plugins {
    id 'jacoco'
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.5'
    id 'org.jetbrains.dokka' version '0.10.1'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.unbroken-dome.test-sets' version '3.0.1'
    id "com.github.ben-manes.versions" version "0.28.0"
}

group 'com.github.hauner.openapi'
version '1.0.0.M1'

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}


ext {
    processorApiVersion = '1.0.0'
    jacksonVersion = '2.11.0'

    bintrayUser = project.hasProperty ('BINTRAY_USER') ? BINTRAY_USER : 'n/a'
    bintrayKey =  project.hasProperty ('BINTRAY_KEY')  ? BINTRAY_KEY  : 'n/a'
}


repositories {
    mavenCentral()
    jcenter()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
    maven {
        url "https://dl.bintray.com/hauner/openapi-processor"
    }
}

test {
    useJUnitPlatform()
}

testSets {
    testInt
}

check.dependsOn testInt


compileGroovy {
    dependsOn 'compileKotlin'
    classpath += files(compileKotlin.destinationDir)
}

compileTestGroovy {
    dependsOn 'compileKotlin'
    classpath += files(compileKotlin.destinationDir)
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

dependencies {
    components.all(JacksonPlatformRule)
    components.all(KotlinPlatformRule)

    implementation 'org.codehaus.groovy:groovy:2.5.12'
    implementation 'org.codehaus.groovy:groovy-nio:2.5.12'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    compileOnly "com.github.hauner.openapi:openapi-processor-api:$processorApiVersion"

    implementation 'org.openapi4j:openapi-parser:0.9'
    implementation ('io.swagger.parser.v3:swagger-parser:2.0.20') {
        exclude group: 'io.swagger.parser.v3', module: 'swagger-parser-v2-converter'
        exclude group: 'io.swagger.core.v3', module: 'swagger-annotations'
    }

     implementation ('com.google.googlejavaformat:google-java-format:1.8') {
        exclude group: 'com.google.guava'
    }

    implementation ('com.google.guava:guava:28.1-jre') {
        exclude group: 'com.google.guava'
        exclude group: 'com.google.j2objc'
        exclude group: 'com.google.code.findbugs'
        exclude group: 'com.google.errorprone'
        exclude group: 'org.checkerframework'
        exclude group: 'org.codehaus.mojo'
    }

    testImplementation "com.github.hauner.openapi:openapi-processor-api:$processorApiVersion"
    testImplementation ('com.github.hauner.openapi:openapi-processor-test:1.0.0.M1') {
        exclude group: 'com.google.guava'
    }

    testImplementation("com.google.jimfs:jimfs:1.1") {
         exclude group: 'com.google.guava'
     }

    testImplementation ("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testCompileOnly  ("junit:junit:4.13")
    testRuntimeOnly ("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testRuntimeOnly ("org.junit.vintage:junit-vintage-engine:5.6.2")

    testImplementation ('org.spockframework:spock-core:2.0-M2-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'junit'
    }
    testImplementation ('org.spockframework:spock-junit4:2.0-M2-groovy-2.5') {
        exclude group: 'org.codehaus.groovy'
        exclude group: 'junit'
    }
    testImplementation 'net.bytebuddy:byte-buddy:1.10.11'
    testImplementation 'ch.qos.logback:logback-classic:1.2.3'
}

tasks.withType(Test) {
    finalizedBy jacocoTestReport
}


jacoco {
    toolVersion = "0.8.5"
}

project.jacocoTestReport {
    getExecutionData().setFrom(fileTree(buildDir).include("/jacoco/*.exec"))
}


task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier.set ('sources')
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: [groovydoc, dokka]) {
    archiveClassifier.set ('javadoc')
    from "$buildDir/docs"
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

groovydoc {
    destinationDir file("$buildDir/docs/groovy")
}

dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/docs/kotlin"
}


bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['processor']

    pkg {
        repo = 'openapi-processor'
        name = 'openapi-processor-core'
        //userOrg = 'openapi-processor'
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/hauner/openapi-processor-core'

        version {
            name = project.version
        }
    }
}


publishing {
    publications {
        processor (MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            groupId project.group
            artifactId project.name
            version project.version
        }
    }
}
